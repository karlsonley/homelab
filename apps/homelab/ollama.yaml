apiVersion: v1
kind: Namespace
metadata:
  name: ollama
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ollama-models
  namespace: ollama
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 40Gi
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: ollama
  namespace: flux-system
spec:
  image: docker.io/ollama/ollama
  interval: 10m
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: ollama
  namespace: flux-system
spec:
  imageRepositoryRef:
    name: ollama
  policy:
    semver:
      range: ">=0.0.0 <1.0.0"
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageUpdateAutomation
metadata:
  name: ollama
  namespace: flux-system
spec:
  interval: 10m
  sourceRef:
    kind: GitRepository
    name: flux-system
  git:
    checkout:
      ref:
        branch: main
    commit:
      author:
        email: fluxcdbot@users.noreply.github.com
        name: fluxcdbot
      messageTemplate: |
        chore(ollama): update image to {{range .Updated.Images}}{{println .}}{{end}}
    push:
      branch: main
  update:
    path: ./apps/homelab/ollama.yaml
    strategy: Setters
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
  namespace: ollama
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: ollama
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ollama
    spec:
      nodeSelector:
        kubernetes.io/hostname: talos-ctrl-node-1
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: ollama
        image: docker.io/ollama/ollama:0.12.8 # {"$imagepolicy": "flux-system:ollama"}
        ports:
        - containerPort: 11434
          name: http
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        env:
        - name: OLLAMA_HOST
          value: "0.0.0.0:11434"
        livenessProbe:
          httpGet:
            path: /
            port: 11434
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 11434
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: models
          mountPath: /root/.ollama
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
      volumes:
      - name: models
        persistentVolumeClaim:
          claimName: ollama-models
---
apiVersion: v1
kind: Service
metadata:
  name: ollama
  namespace: ollama
  labels:
    app.kubernetes.io/name: ollama
spec:
  selector:
    app.kubernetes.io/name: ollama
  ports:
  - port: 11434
    targetPort: 11434
    name: http
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: open-webui-data
  namespace: ollama
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 5Gi
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: open-webui
  namespace: flux-system
spec:
  image: ghcr.io/open-webui/open-webui
  interval: 10m
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: open-webui
  namespace: flux-system
spec:
  imageRepositoryRef:
    name: open-webui
  policy:
    semver:
      range: ">=0.0.0 <1.0.0"
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: open-webui-oidc
  namespace: ollama
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: scaleway-secret-manager
    kind: ClusterSecretStore
  target:
    name: open-webui-oidc
    template:
      type: Opaque
      data:
        oidc_client_id: "{{ .oidc_client_id}}"
        oidc_client_secret: "{{ .oidc_client_secret}}"
        webui_secret_key: "{{ .webui_secret_key}}"
  data:
  - secretKey: oidc_client_id
    remoteRef:
      key: name:pocket-id
      property: oidc_client_id
      version: latest_enabled
  - secretKey: oidc_client_secret
    remoteRef:
      key: name:pocket-id
      property: oidc_client_secret
      version: latest_enabled
  - secretKey: webui_secret_key
    remoteRef:
      key: name:open-webui
      property: webui_secret_key
      version: latest_enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui
  namespace: ollama
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: open-webui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: open-webui
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: open-webui
        image: ghcr.io/open-webui/open-webui:v0.6.34 # {"$imagepolicy": "flux-system:open-webui"}
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        env:
        - name: OLLAMA_BASE_URL
          value: http://ollama:11434
        - name: WEBUI_AUTH
          value: "true"
        - name: WEBUI_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: open-webui-oidc
              key: webui_secret_key
        - name: WEBUI_URL
          value: "https://ollama.sonley.dev"
        - name: CORS_ALLOW_ORIGIN
          value: "https://ollama.sonley.dev"
        - name: DATA_DIR
          value: /app/backend/data
        - name: ENABLE_OAUTH_SIGNUP
          value: "true"
        - name: ENABLE_LOGIN_FORM
          value: "false"
        - name: OAUTH_PROVIDER_NAME
          value: "Pocket ID"
        - name: OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: open-webui-oidc
              key: oidc_client_id
        - name: OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: open-webui-oidc
              key: oidc_client_secret
        - name: OPENID_PROVIDER_URL
          value: "https://pocket-id.sonley.dev/.well-known/openid-configuration"
        - name: OAUTH_SCOPES
          value: "openid email profile groups"
        - name: ENABLE_OAUTH_ROLE_MANAGEMENT
          value: "true"
        - name: OAUTH_ROLES_CLAIM
          value: "groups"
        - name: OAUTH_ALLOWED_ROLES
          value: "admins,users"
        - name: OAUTH_ADMIN_ROLES
          value: "admins"
        - name: ENABLE_RAG_WEB_SEARCH
          value: "false"
        - name: ENABLE_RAG_WEB_LOADER
          value: "false"
        - name: ENABLE_IMAGE_GENERATION
          value: "false"
        - name: ENABLE_COMMUNITY_SHARING
          value: "false"
        - name: ENABLE_OPENAI_API
          value: "false"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /app/backend/data
        - name: cache
          mountPath: /app/backend/open_webui/static
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: open-webui-data
      - name: cache
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: open-webui
  namespace: ollama
  labels:
    app.kubernetes.io/name: open-webui
spec:
  selector:
    app.kubernetes.io/name: open-webui
  ports:
  - port: 8080
    targetPort: 8080
    name: http
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ollama
  namespace: ollama
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`ollama.sonley.dev`)
      services:
        - kind: Service
          name: open-webui
          namespace: ollama
          port: 8080
