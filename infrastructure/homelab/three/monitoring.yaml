---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    pod-security.kubernetes.io/enforce: privileged
---
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: grafana-dashboards
  namespace: flux-system
spec:
  interval: 10m
  path: ./infrastructure/homelab/three/grafana-dashboards
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-oidc
  namespace: flux-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: scaleway-secret-manager
    kind: ClusterSecretStore
  target:
    name: grafana-oidc
    template:
      type: Opaque
      data:
        oidc_client_id: "{{ .oidc_client_id}}"
        oidc_client_secret: "{{ .oidc_client_secret}}"
  data:
  - secretKey: oidc_client_id
    remoteRef:
      key: name:pocket-id
      property: oidc_client_id
      version: latest_enabled
  - secretKey: oidc_client_secret
    remoteRef:
      key: name:pocket-id
      property: oidc_client_secret
      version: latest_enabled
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: alertmanager-discord
  namespace: flux-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: scaleway-secret-manager
    kind: ClusterSecretStore
  target:
    name: alertmanager-discord
    template:
      type: Opaque
      data:
        webhook_url: "{{ .webhook_url}}"
  data:
  - secretKey: webhook_url
    remoteRef:
      key: name:alertmanager
      property: discord_webhook_url
      version: latest_enabled
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: flux-system
spec:
  interval: 30m
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: flux-system
spec:
  releaseName: kube-prometheus-stack
  targetNamespace: monitoring
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: ">=76.0.0 <77.0.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      interval: 5m
  valuesFrom:
  - kind: Secret
    name: grafana-oidc
    valuesKey: oidc_client_id
    targetPath: grafana.grafana\.ini.auth\.generic_oauth.client_id
  - kind: Secret
    name: grafana-oidc
    valuesKey: oidc_client_secret
    targetPath: grafana.grafana\.ini.auth\.generic_oauth.client_secret
  - kind: Secret
    name: alertmanager-discord
    valuesKey: webhook_url
    targetPath: alertmanager.config.receivers[0].discord_configs[0].webhook_url
  values:
    alertmanager:
      alertmanagerSpec:
        replicas: 3
      config:
        route:
          receiver: discord
          group_by: ['alertname', 'cluster', 'service']
          group_wait: 10s
          group_interval: 1m
          repeat_interval: 5m
          routes:
          - receiver: "null"
            matchers:
            - alertname = "Watchdog"
          - receiver: discord
            continue: true
        receivers:
        - name: discord
          discord_configs:
          - title: |
              [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}
            message: |
              {{ range .Alerts }}
              **Alert:** {{ .Labels.alertname }}
              **Severity:** {{ .Labels.severity }}
              **Summary:** {{ .Annotations.summary }}
              **Description:** {{ .Annotations.description }}
              {{ end }}
        - name: "null"
        templates:
        - '/etc/alertmanager/config/*.tmpl'
    grafana:
      defaultDashboardsEnabled: false
      assertNoLeakedSecrets: false
      grafana.ini:
        panels:
          disable_sanitize_html: true
        server:
          root_url: https://grafana.sonley.dev
        dashboards:
          default_home_dashboard_path: /var/lib/grafana/dashboards/default/kubernetes-monitoring-dashboard.json
        date_formats:
          default_timezone: UTC
          week_start: monday
        auth:
          disable_login_form: true
          oauth_auto_login: true
        auth.generic_oauth:
          enabled: true
          name: Pocket ID
          scopes: openid profile email groups
          auth_url: https://pocket-id.sonley.dev/authorize
          token_url: https://pocket-id.sonley.dev/api/oidc/token
          api_url: https://pocket-id.sonley.dev/api/oidc/userinfo
          use_pkce: true
          allow_sign_up: true
          role_attribute_path: contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'users') && 'Editor' || 'Viewer'
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboardsConfigMaps:
        default: "grafana-dashboards"
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
  namespace: monitoring
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`grafana.sonley.dev`)
    services:
    - kind: Service
      name: kube-prometheus-stack-grafana
      namespace: monitoring
      port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`alertmanager.sonley.dev`)
    services:
    - kind: Service
      name: kube-prometheus-stack-alertmanager
      namespace: monitoring
      port: 9093
    middlewares:
      - name: oidc-auth
        namespace: traefik
